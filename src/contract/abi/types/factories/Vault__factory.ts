/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers'
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers'
import type { NonPayableOverrides } from '../common'
import type { Vault, VaultInterface } from '../Vault'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_ownerIncomePercentage',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'locked',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ownerIncome',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ownerIncomePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawOwnerIncome',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610f68380380610f68833981810160405281019061003291906100ba565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506100e7565b600080fd5b6000819050919050565b61009781610084565b81146100a257600080fd5b50565b6000815190506100b48161008e565b92915050565b6000602082840312156100d0576100cf61007f565b5b60006100de848285016100a5565b91505092915050565b610e72806100f66000396000f3fe60806040526004361061007b5760003560e01c8063c89421ad1161004e578063c89421ad1461012a578063cbf9fe5f14610155578063d0e30db014610192578063dabcaa491461019c5761007b565b806327e235e3146100805780633ccfd60b146100bd578063576f685a146100d45780638da5cb5b146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061093d565b6101b3565b6040516100b49190610983565b60405180910390f35b3480156100c957600080fd5b506100d26101cb565b005b3480156100e057600080fd5b506100e9610526565b6040516100f69190610983565b60405180910390f35b34801561010b57600080fd5b5061011461052c565b60405161012191906109ad565b60405180910390f35b34801561013657600080fd5b5061013f610550565b60405161014c9190610983565b60405180910390f35b34801561016157600080fd5b5061017c6004803603810190610177919061093d565b610556565b60405161018991906109e3565b60405180910390f35b61019a610576565b005b3480156101a857600080fd5b506101b1610611565b005b60046020528060005260406000206000915090505481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024f90610a5b565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e90610ac7565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103aa5760646002548361039d9190610b16565b6103a79190610b87565b90505b60003373ffffffffffffffffffffffffffffffffffffffff1682846103cf9190610bb8565b6040516103db90610c1d565b60006040518083038185875af1925050503d8060008114610418576040519150601f19603f3d011682016040523d82523d6000602084013e61041d565b606091505b5050905080610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890610c7e565b60405180910390fd5b600082111561048457816001600082825461047c9190610c9e565b925050819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60036020528060005260406000206000915054906101000a900460ff1681565b600034116105b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b090610d44565b60405180910390fd5b34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106089190610c9e565b92505081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690610db0565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072390610a5b565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600154116107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090610e1c565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff166001546040516107f190610c1d565b60006040518083038185875af1925050503d806000811461082e576040519150601f19603f3d011682016040523d82523d6000602084013e610833565b606091505b5050905080610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90610c7e565b60405180910390fd5b6000600181905550506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061090a826108df565b9050919050565b61091a816108ff565b811461092557600080fd5b50565b60008135905061093781610911565b92915050565b600060208284031215610953576109526108da565b5b600061096184828501610928565b91505092915050565b6000819050919050565b61097d8161096a565b82525050565b60006020820190506109986000830184610974565b92915050565b6109a7816108ff565b82525050565b60006020820190506109c2600083018461099e565b92915050565b60008115159050919050565b6109dd816109c8565b82525050565b60006020820190506109f860008301846109d4565b92915050565b600082825260208201905092915050565b7f5769746864726177616c206973206c6f636b6564000000000000000000000000600082015250565b6000610a456014836109fe565b9150610a5082610a0f565b602082019050919050565b60006020820190508181036000830152610a7481610a38565b9050919050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b6000610ab16016836109fe565b9150610abc82610a7b565b602082019050919050565b60006020820190508181036000830152610ae081610aa4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b218261096a565b9150610b2c8361096a565b9250828202610b3a8161096a565b91508282048414831517610b5157610b50610ae7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b928261096a565b9150610b9d8361096a565b925082610bad57610bac610b58565b5b828204905092915050565b6000610bc38261096a565b9150610bce8361096a565b9250828203905081811115610be657610be5610ae7565b5b92915050565b600081905092915050565b50565b6000610c07600083610bec565b9150610c1282610bf7565b600082019050919050565b6000610c2882610bfa565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6000610c686011836109fe565b9150610c7382610c32565b602082019050919050565b60006020820190508181036000830152610c9781610c5b565b9050919050565b6000610ca98261096a565b9150610cb48361096a565b9250828201905080821115610ccc57610ccb610ae7565b5b92915050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b6000610d2e6025836109fe565b9150610d3982610cd2565b604082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b6000610d9a600d836109fe565b9150610da582610d64565b602082019050919050565b60006020820190508181036000830152610dc981610d8d565b9050919050565b7f4e6f206f776e657220696e636f6d6520746f2077697468647261770000000000600082015250565b6000610e06601b836109fe565b9150610e1182610dd0565b602082019050919050565b60006020820190508181036000830152610e3581610df9565b905091905056fea264697066735822122031455042e2a4c561118a0a9db2571d431758cef5e92d000169da17853ffa07fa64736f6c63430008170033'

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    _ownerIncomePercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_ownerIncomePercentage, overrides || {})
  }
  override deploy(
    _ownerIncomePercentage: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ownerIncomePercentage, overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault
  }
}
